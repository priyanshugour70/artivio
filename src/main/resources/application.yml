spring:
  application:
    name: artivio

  datasource:
    url: jdbc:h2:mem:artivio_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  # Redis Configuration for caching
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms

  main:
    allow-bean-definition-overriding: true

  # Disable auto-configurations that require additional setup
  autoconfigure:
    exclude:
      - org.springframework.ai.autoconfigure.vectorstore.chroma.ChromaVectorStoreAutoConfiguration

# JWT Configuration
jwt:
  secret-key: ${JWT_SECRET_KEY:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
  expiration-time: 86400000 # 24 hours

# Server Configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# Logging Configuration
logging:
  level:
    com.klakar.artivio: INFO
    org.springframework.security: DEBUG
    org.springframework.web.socket: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Application specific configuration
app:
  gemini:
    api-key: ${GEMINI_API_KEY:AIzaSyCosFT2LVX1YspSP8fYEPE_4-bgfKkhkOI}
    model: gemini-1.5-flash
    temperature: 0.7
    max-tokens: 1000

  # ChromaDB Configuration (Optional)
  chroma:
    enabled: ${CHROMA_ENABLED:false}
    url: ${CHROMA_URL:http://localhost:8000}